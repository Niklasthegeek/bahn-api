components:
  schemas:
    connection:
      description: It's information about a connected train at a particular stop.
      properties:
        cs:
          $ref: '#/components/schemas/connectionStatus'
        eva:
          description: EVA station number.
          format: int64
          type: integer
          xml:
            attribute: true
        id:
          description: Id.
          type: string
          xml:
            attribute: true
        ref:
          $ref: '#/components/schemas/timetableStop'
        s:
          $ref: '#/components/schemas/timetableStop'
        ts:
          description: Time stamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
      required:
        - cs
        - id
        - s
        - ts
      type: object
    connectionStatus:
      description: |
        Connection status.

        * w - WAITING
          This (regular) connection is waiting.
        * n - TRANSITION
          This (regular) connection CANNOT wait.
        * a - ALTERNATIVE
          This is an alternative (unplanned) connection that has been introduced as a replacement for one regular connection that cannot wait. The connections "tl" (triplabel) attribute might in this case refer to the replaced connection (or more specifi-cally the trip from that connection). Alternative connections are always waiting (they are re-moved otherwise).
      enum:
        - w
        - 'n'
        - a
      type: string
    delaySource:
      description: |
        Delay source.

        * L - LEIBIT
          LeiBit/LeiDis.
        * NA - RISNE AUT
          IRIS-NE (automatisch).
        * NM - RISNE MAN
          IRIS-NE (manuell).
        * V - VDV
          Prognosen durch dritte EVU �ber VDVin.
        * IA - ISTP AUT
          ISTP automatisch.
        * IM - ISTP MAN
          ISTP manuell.
        * A - AUTOMATIC PROGNOSIS
          Automatische Prognose durch Prognoseautomat.
      enum:
        - L
        - NA
        - NM
        - V
        - IA
        - IM
        - A
      type: string
    distributorMessage:
      description: An additional message to a given station-based disruption by a specific distributor.
      properties:
        int:
          description: Internal text.
          type: string
          xml:
            attribute: true
        'n':
          description: Distributor name.
          type: string
          xml:
            attribute: true
        t:
          $ref: '#/components/schemas/distributorType'
        ts:
          description: Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
      type: object
    distributorType:
      description: |
        Distributor type.

        * s - CITY
        * r - REGION
        * f - LONG DISTANCE
        * x - OTHER
      enum:
        - s
        - r
        - f
        - x
      type: string
    event:
      description: An event (arrival or departure) that is part of a stop.
      properties:
        cde:
          description: Changed distant endpoint.
          type: string
          xml:
            attribute: true
        clt:
          description: Cancellation time. Time when the cancellation of this stop was created. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
        cp:
          description: Changed platform.
          type: string
          xml:
            attribute: true
        cpth:
          description: Changed path.
          type: string
          xml:
            attribute: true
        cs:
          $ref: '#/components/schemas/eventStatus'
        ct:
          description: Changed time. New estimated or actual departure or arrival time. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
        dc:
          description: Distant change.
          type: integer
          xml:
            attribute: true
        hi:
          description: Hidden. 1 if the event should not be shown on WBT because travellers are not supposed to enter or exit the train at this stop.
          type: integer
          xml:
            attribute: true
        l:
          description: Line. The line indicator (e.g. "3" for an S-Bahn or "45S" for a bus).
          type: string
          xml:
            attribute: true
        m:
          description: List of messages.
          items:
            $ref: '#/components/schemas/message'
          type: array
        pde:
          description: Planned distant endpoint.
          type: string
          xml:
            attribute: true
        pp:
          description: Planned platform.
          type: string
          xml:
            attribute: true
        ppth:
          description: |
            Planned Path. A sequence of station names separated by the pipe symbols ('|').
            E.g.: 'Mainz Hbf|R�sselsheim|Frankfrt(M) Flughafen'.
            For arrival, the path indicates the stations that come before the current station. The first element then is the trip's start station.
            For departure, the path indicates the stations that come after the current station. The last element in the path then is the trip's destination station.
            Note that the current station is never included in the path (neither for arrival nor for departure).
          type: string
          xml:
            attribute: true
        ps:
          $ref: '#/components/schemas/eventStatus'
        pt:
          description: Planned time. Planned departure or arrival time. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
        tra:
          description: Transition. Trip id of the next or previous train of a shared train. At the start stop this references the previous trip, at the last stop it references the next trip. E.g. '2016448009055686515-1403311438-1'
          type: string
        wings:
          description: Wing. A sequence of trip id separated by the pipe symbols ('|'). E.g. '-906407760000782942-1403311431'.
          type: string
          xml:
            attribute: true
      type: object
    eventStatus:
      description: |
        Event status.

        * p - PLANNED
          The event was planned. This status is also used when the cancellation of an event has been revoked.
        * a - ADDED
          The event was added to the planned data (new stop).
        * c - CANCELLED
          The event was canceled (as changedstatus, can apply to planned and added stops).
      enum:
        - p
        - a
        - c
      type: object
    historicDelay:
      description: It's the history of all delay-messages for a stop. This element extends HistoricChange.
      properties:
        ar:
          description: The arrival event. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
        cod:
          description: Detailed description of delay cause.
          type: string
          xml:
            attribute: true
        dp:
          description: The departure event. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
        src:
          $ref: '#/components/schemas/delaySource'
        ts:
          description: Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
      type: object
    historicPlatformChange:
      description: It's the history of all platform-changes for a stop. This element extends HistoricChange.
      properties:
        ar:
          description: Arrival platform.
          type: string
          xml:
            attribute: true
        cot:
          description: Detailed cause of track change.
          type: string
          xml:
            attribute: true
        dp:
          description: Departure platform.
          type: string
          xml:
            attribute: true
        ts:
          description: Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
      type: object
    message:
      description: A message that is associated with an event, a stop or a trip.
      properties:
        c:
          description: Code.
          type: integer
          xml:
            attribute: true
        cat:
          description: Category.
          type: string
          xml:
            attribute: true
        del:
          description: Deleted.
          type: integer
          xml:
            attribute: true
        dm:
          description: Distributor message.
          items:
            $ref: '#/components/schemas/distributorMessage'
          type: array
        ec:
          description: External category.
          type: string
          xml:
            attribute: true
        elnk:
          description: External link associated with the message.
          type: string
          xml:
            attribute: true
        ext:
          description: External text.
          type: string
          xml:
            attribute: true
        from:
          description: Valid from. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
        id:
          description: Message id.
          type: string
          xml:
            attribute: true
        int:
          description: Internal text.
          type: string
          xml:
            attribute: true
        o:
          description: Owner.
          type: string
          xml:
            attribute: true
        pr:
          $ref: '#/components/schemas/priority'
        t:
          $ref: '#/components/schemas/messageType'
        tl:
          description: Trip label.
          items:
            $ref: '#/components/schemas/tripLabel'
          type: array
        to:
          description: Valid to. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
        ts:
          description: Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. "1404011437" for 14:37 on April the 1st of 2014.
          type: string
          xml:
            attribute: true
      required:
        - id
        - t
        - ts
      type: object
    messageType:
      description: |
        Message status

        * h - HIM
          A HIM message (generated through the Hafas Information Manager).
        * q - QUALITY CHANGE
          A message about a quality change.
        * f - FREE
          A free text message.
        * d - CAUSE OF DELAY
          A message about the cause of a delay.
        * i - IBIS
          An IBIS message (generated from IRIS-AP).
        * u - UNASSIGNED IBIS MESSAGE
          An IBIS message (generated from IRIS-AP) not yet assigned to a train.
        * r - DISRUPTION
          A major disruption.
        * c - CONNECTION
          A connection.
      enum:
        - h
        - q
        - f
        - d
        - i
        - u
        - r
        - c
      type: string
    multipleStationData:
      description: A wrapper that represents multiple StationData objects.
      properties:
        station:
          description: List of stations with additional data.
          items:
            $ref: '#/components/schemas/stationData'
          type: array
      required:
        - station
      type: object
    priority:
      description: |
        Priority.

        * 1 - HIGH
        * 2 - MEDIUM
        * 3 - LOW
        * 4 - DONE
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
      type: string
    referenceTrip:
      description: A reference trip is another real trip, but it doesn't have its own stops and events. It refers only to its ref-erenced regular trip. The reference trip collects mainly all different attributes of the referenced regular trip.
      properties:
        c:
          description: The cancellation flag. True means, the reference trip is cancelled.
          type: boolean
          xml:
            attribute: true
        ea:
          $ref: '#/components/schemas/referenceTripStopLabel'
        id:
          description: |
            An id that uniquely identifies the reference trip. It consists of the following two elements separated by dashes:

            * A 'daily trip id' that uniquely identifies a reference trip within one day. This id is typically reused on subsequent days. This could be negative.
            * A 10-digit date specifier (YYMMddHHmm) that indicates the planned departure date of the referenced regular trip from its start station.

            Example:

            '-7874571842864554321-1403311221' would be used for a trip with daily trip id '-7874571842864554321' that starts on march the 31th 2014.
          type: string
          xml:
            attribute: true
        rtl:
          $ref: '#/components/schemas/referenceTripLabel'
        sd:
          $ref: '#/components/schemas/referenceTripStopLabel'
      required:
        - c
        - ea
        - id
        - rtl
        - sd
      type: object
    referenceTripLabel:
      description: It's a compound data type that contains common data items that characterize a reference trip. The con-tents is represented as a compact 3-tuple in XML.
      properties:
        c:
          description: Category. Trip category, e.g. "ICE" or "RE".
          type: string
          xml:
            attribute: true
        'n':
          description: Trip/train number, e.g. "4523".
          type: string
          xml:
            attribute: true
      required:
        - c
        - 'n'
      type: object
    referenceTripRelation:
      description: A reference trip relation holds how a reference trip is related to a stop, for instance the reference trip starts after the stop. Stop contains a collection of that type, only if reference trips are available.
      properties:
        rt:
          $ref: '#/components/schemas/referenceTrip'
        rts:
          $ref: '#/components/schemas/referenceTripRelationToStop'
      required:
        - rt
        - rts
      type: object
    referenceTripRelationToStop:
      description: |
        The reference trips relation to the stop, which contains it.

        * b - BEFORE
          The reference trip ends before that stop.
        * e - END
          The reference trips ends at that stop.
        * c - BETWEEN
          The stop is between reference trips start and end, in other words, the stop is contained within its travel path.
        * s - START
          The reference trip starts at that stop.
        * a - AFTER
          The reference trip starts after that stop.
      enum:
        - b
        - e
        - c
        - s
        - a
      type: string
    referenceTripStopLabel:
      description: It's a compound data type that contains common data items that characterize a reference trip stop. The contents is represented as a compact 4-tuple in XML.
      properties:
        eva:
          description: The eva number of the correspondent stop of the regular trip.
          format: int64
          type: integer
          xml:
            attribute: true
        i:
          description: The index of the correspondent stop of the regu-lar trip.
          type: integer
          xml:
            attribute: true
        'n':
          description: The (long) name of the correspondent stop of the regular trip.
          type: string
          xml:
            attribute: true
        pt:
          description: The planned time of the correspondent stop of the regular trip.
          type: string
          xml:
            attribute: true
      required:
        - eva
        - i
        - 'n'
        - pt
      type: object
    stationData:
      description: A transport object which keep data for a station.
      properties:
        ds100:
          description: DS100 station code.
          type: string
          xml:
            attribute: true
        eva:
          description: EVA station number.
          format: int64
          type: integer
          xml:
            attribute: true
        meta:
          description: List of meta stations. A sequence of station names separated by the pipe symbols ("|").
          type: string
          xml:
            attribute: true
        name:
          description: Station name.
          type: string
          xml:
            attribute: true
        p:
          description: List of platforms. A sequence of platforms separated by the pipe symbols ("|").
          type: string
          xml:
            attribute: true
      required:
        - ds100
        - eva
        - name
      type: object
    timetable:
      description: A timetable is made of a set of TimetableStops and a potential Disruption.
      properties:
        eva:
          description: EVA station number.
          format: int64
          type: integer
          xml:
            attribute: true
        m:
          description: List of Message.
          items:
            $ref: '#/components/schemas/message'
          type: array
        s:
          description: List of TimetableStop.
          items:
            $ref: '#/components/schemas/timetableStop'
          type: array
        station:
          description: Station name.
          type: string
          xml:
            attribute: true
      type: object
    timetableStop:
      description: A stop is a part of a Timetable.
      properties:
        ar:
          $ref: '#/components/schemas/event'
        conn:
          description: Connection element.
          items:
            $ref: '#/components/schemas/connection'
          type: array
        dp:
          $ref: '#/components/schemas/event'
        eva:
          description: The eva code of the station of this stop. Example '8000105' for Frankfurt(Main)Hbf.
          format: int64
          type: integer
          xml:
            attribute: true
        hd:
          description: Historic delay element.
          items:
            $ref: '#/components/schemas/historicDelay'
          type: array
        hpc:
          description: Historic platform change element.
          items:
            $ref: '#/components/schemas/historicPlatformChange'
          type: array
        id:
          description: |
            An id that uniquely identifies the stop. It consists of the following three elements separated by dashes
            * a 'daily trip id' that uniquely identifies a trip within one day. This id is typically reused on subsequent days. This could be negative.
            * a 6-digit date specifier (YYMMdd) that indicates the planned departure date of the trip from its start station.
            * an index that indicates the position of the stop within the trip (in rare cases, one trip may arrive multiple times at one station). Added trips get indices above 100.
            Example '-7874571842864554321-1403311221-11' would be used for a trip with daily trip id '-7874571842864554321' that starts on march the 31th 2014 and where the current station is the 11th stop.
          type: string
          xml:
            attribute: true
        m:
          description: Message element.
          items:
            $ref: '#/components/schemas/message'
          type: array
        ref:
          $ref: '#/components/schemas/tripReference'
        rtr:
          description: Reference trip relation element.
          items:
            $ref: '#/components/schemas/referenceTripRelation'
          type: array
        tl:
          $ref: '#/components/schemas/tripLabel'
      required:
        - eva
        - id
      type: object
    tripLabel:
      description: It's a compound data type that contains common data items that characterize a Trip. The contents is represented as a compact 6-tuple in XML.
      properties:
        c:
          description: Category. Trip category, e.g. "ICE" or "RE".
          type: string
          xml:
            attribute: true
        f:
          description: Filter flags.
          type: string
          xml:
            attribute: true
        'n':
          description: Trip/train number, e.g. "4523".
          type: string
          xml:
            attribute: true
        o:
          description: Owner. A unique short-form and only intended to map a trip to specific evu.
          type: string
          xml:
            attribute: true
        t:
          $ref: '#/components/schemas/tripType'
      required:
        - c
        - 'n'
        - o
      type: object
    tripReference:
      description: It's a reference to another trip, which holds its label and reference trips, if available.
      properties:
        rt:
          description: The referred trips reference trip elements.
          items:
            $ref: '#/components/schemas/tripLabel'
          type: array
        tl:
          $ref: '#/components/schemas/tripLabel'
      required:
        - tl
      type: object
    tripType:
      description: Trip type
      enum:
        - p
        - e
        - z
        - s
        - h
        - 'n'
      type: string
  securitySchemes:
    ClientSecret:
      name: DB-Api-Key
      type: apiKey
      in: header
      x-key-type: client_secret
    ClientId:
      name: DB-Client-Id
      type: apiKey
      in: header
      x-key-type: client_id
info:
  contact:
    email: dbopendata@deutschebahn.com
  description: API for passenger information for train stations operated by DB Station&Service AG
  termsOfService: https://data.deutschebahn.com/nutzungsbedingungen.html
  title: Timetables
  version: 1.0.213
  x-ibm-name: timetables
openapi: 3.0.1
paths:
  /fchg/{evaNo}:
    get:
      description: |
        Returns a Timetable object (see Timetable) that contains all known changes for the station given by evaNo.

        The data includes all known changes from now on until ndefinitely into the future. Once changes become obsolete (because their trip departs from the station) they are removed from this resource.

        Changes may include messages. On event level, they usually contain one or more of the 'changed' attributes ct, cp, cs or cpth. Changes may also include 'planned' attributes if there is no associated planned data for the change (e.g. an unplanned stop or trip).

        Full changes are updated every 30s and should be cached for that period by web caches.
      parameters:
        - description: Station EVA-number.
          in: path
          name: evaNo
          required: true
          schema:
            default: 8000105
            type: string
      responses:
        '200':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/timetable'
          description: successful operation
        '404':
          description: resource not found
      summary: Returns all known changes for a station
      tags:
        - Timetables
  /plan/{evaNo}/{date}/{hour}:
    get:
      description: |
        Returns a Timetable object (see Timetable) that contains planned data for the specified station (evaNo) within the hourly time slice given by date (format YYMMDD) and hour (format HH). The data includes stops for all trips that arrive or depart within that slice. There is a small overlap between slices since some trips arrive in one slice and depart in another.

        Planned data does never contain messages. On event level, planned data contains the 'plannned' attributes pt, pp, ps and ppth while the 'changed' attributes ct, cp, cs and cpth are absent.

        Planned data is generated many hours in advance and is static, i.e. it does never change. It should be cached by web caches.public interface allows access to information about a station.
      parameters:
        - description: Station EVA-number.
          in: path
          name: evaNo
          required: true
          schema:
            default: 8000105
            type: string
        - description: Date in format YYMMDD.
          in: path
          name: date
          required: true
          schema:
            default: 220930
            type: string
        - description: Hour in format HH.
          in: path
          name: hour
          required: true
          schema:
            pattern: ^([0-1][0-9]|2[0-3])$
            type: string
      responses:
        '200':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/timetable'
          description: successful operation
        '404':
          description: resource not found
      summary: Returns planned data for the specified station within an hourly time slice
      tags:
        - Timetables
  /rchg/{evaNo}:
    get:
      description: |
        Returns a Timetable object (see Timetable) that contains all recent changes for the station given by evaNo. Recent changes are always a subset of the full changes. They may equal full changes but are typically much smaller. Data includes only those changes that became known within the last 2 minutes.

        A client that updates its state in intervals of less than 2 minutes should load full changes initially and then proceed to periodically load only the recent changes in order to save bandwidth.

        Recent changes are updated every 30s as well and should be cached for that period by web caches.
      parameters:
        - description: Station EVA-number.
          in: path
          name: evaNo
          required: true
          schema:
            default: 8000105
            type: string
      responses:
        '200':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/timetable'
          description: successful operation
        '404':
          description: resource not found
      summary: Returns all recent changes for a station
      tags:
        - Timetables
  /station/{pattern}:
    get:
      description: This public interface allows access to information about a station.
      parameters:
        - description: can be a station name (prefix), eva number, ds100/rl100 code, wildcard (*); doesn't seem to work with umlauten in station name (prefix)
          in: path
          name: pattern
          required: true
          schema:
            default: BLS
            type: string
      responses:
        '200':
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/multipleStationData'
          description: successful operation
        '404':
          description: resource not found
      summary: Returns information about stations matching the given pattern
      tags:
        - Timetables
servers:
  - url: https://apis.deutschebahn.com/db-api-marketplace/apis/timetables/v1
tags:
  - name: Timetables
x-ibm-configuration:
  phase: realized
  testable: true
  enforced: true
  application-authentication:
    certificate: false
  type: rest
  cors:
    enabled: true
security:
  - ClientSecret: []
    ClientId: []
x-ibm-endpoints:
  - url: https://apis.deutschebahn.com/db-api-marketplace/apis/timetables/v1
