{
  "version": 3,
  "sources": ["autocomplete.js"],
  "sourcesContent": ["/**\n * Bootstrap 5 autocomplete\n */\n\n// #region config\n\n/**\n * @callback RenderCallback\n * @param {Object} item\n * @param {String} label\n * @param {Autocomplete} inst\n * @returns {string}\n */\n\n/**\n * @callback ItemCallback\n * @param {Object} item\n * @param {Autocomplete} inst\n * @returns {void}\n */\n\n/**\n * @callback ServerCallback\n * @param {Response} response\n * @returns {Promise}\n */\n\n/**\n * @typedef Config\n * @property {Boolean} showAllSuggestions Show all suggestions even if they don't match\n * @property {Number} suggestionsThreshold Number of chars required to show suggestions\n * @property {Number} maximumItems Maximum number of items to display\n * @property {Boolean} autoselectFirst Always select the first item\n * @property {Boolean} updateOnSelect Update input value on selection (doesn't play nice with autoselectFirst)\n * @property {Boolean} highlightTyped Highlight matched part of the label\n * @property {Boolean} fullWidth Match the width on the input field\n * @property {Boolean} fixed Use fixed positioning (solve overflow issues)\n * @property {Array} activeClasses By default: [\"bg-primary\", \"text-white\"]\n * @property {String} labelField Key for the label\n * @property {String} valueField Key for the value\n * @property {String} queryParam Key for the query parameter for server\n * @property {Array|Object} items An array of label/value objects or an object with key/values\n * @property {Function} source A function that provides the list of items\n * @property {String} datalist The id of the source datalist\n * @property {String} server Endpoint for data provider\n * @property {String} serverMethod HTTP request method for data provider, default is GET\n * @property {String|Object} serverParams Parameters to pass along to the server\n * @property {Object} fetchOptions Any other fetch options (https://developer.mozilla.org/en-US/docs/Web/API/fetch#syntax)\n * @property {Boolean} liveServer Should the endpoint be called each time on input\n * @property {Boolean} noCache Prevent caching by appending a timestamp\n * @property {Number} debounceTime Debounce time for live server\n * @property {String} notFoundMessage Display a no suggestions found message. Leave empty to disable\n * @property {RenderCallback} onRenderItem Callback function that returns the label\n * @property {ItemCallback} onSelectItem Callback function to call on selection\n * @property {ServerCallback} onServerResponse Callback function to process server response. Must return a Promise\n */\n\n/**\n * @type {Config}\n */\nconst DEFAULTS = {\n  showAllSuggestions: false,\n  suggestionsThreshold: 1,\n  maximumItems: 0,\n  autoselectFirst: true,\n  updateOnSelect: false,\n  highlightTyped: false,\n  fullWidth: false,\n  fixed: false,\n  activeClasses: [\"bg-primary\", \"text-white\"],\n  labelField: \"label\",\n  valueField: \"value\",\n  queryParam: \"query\",\n  items: [],\n  source: null,\n  datalist: \"\",\n  server: \"\",\n  serverMethod: \"GET\",\n  serverParams: {},\n  fetchOptions: {},\n  liveServer: false,\n  noCache: true,\n  debounceTime: 300,\n  notFoundMessage: \"\",\n  onRenderItem: (item, label, inst) => {\n    return label;\n  },\n  onSelectItem: (item, inst) => {},\n  onServerResponse: (response) => {\n    return response.json();\n  },\n};\n\n// #endregion\n\n// #region constants\n\nconst LOADING_CLASS = \"is-loading\";\nconst ACTIVE_CLASS = \"is-active\";\nconst SHOW_CLASS = \"show\";\nconst NEXT = \"next\";\nconst PREV = \"prev\";\n\nconst INSTANCE_MAP = new WeakMap();\nlet counter = 0;\n\n// #endregion\n\n// #region functions\n\n/**\n * @param {Function} func\n * @param {number} timeout\n * @returns {Function}\n */\nfunction debounce(func, timeout = 300) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      //@ts-ignore\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nfunction removeDiacritics(str) {\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\n/**\n * @param {HTMLElement} el\n * @param {HTMLElement} newEl\n * @returns {HTMLElement}\n */\nfunction insertAfter(el, newEl) {\n  return el.parentNode.insertBefore(newEl, el.nextSibling);\n}\n\n// #endregion\n\nclass Autocomplete {\n  /**\n   * @param {HTMLInputElement} el\n   * @param {Config|Object} config\n   */\n  constructor(el, config = {}) {\n    if (!(el instanceof HTMLElement)) {\n      console.error(\"Invalid element\", el);\n      return;\n    }\n    INSTANCE_MAP.set(el, this);\n    counter++;\n    this._searchInput = el;\n\n    this._configure(config);\n\n    // Private vars\n    this._preventInput = false;\n    this._keyboardNavigation = false;\n    this._searchFunc = debounce(() => {\n      this._loadFromServer(true);\n    }, this._config.debounceTime);\n\n    // Create html\n    this._configureSearchInput();\n    this._configureDropElement();\n\n    if (this._config.fixed) {\n      document.addEventListener(\"scroll\", this, true);\n      window.addEventListener(\"resize\", this);\n    }\n\n    // Add listeners (remove then on dispose()). See handleEvent.\n    this._searchInput.addEventListener(\"focus\", this);\n    this._searchInput.addEventListener(\"blur\", this);\n    this._searchInput.addEventListener(\"input\", this);\n    this._searchInput.addEventListener(\"keydown\", this);\n    this._dropElement.addEventListener(\"mousemove\", this);\n\n    this._fetchData();\n  }\n\n  // #region Core\n\n  /**\n   * Attach to all elements matched by the selector\n   * @param {string} selector\n   * @param {Config|Object} config\n   */\n  static init(selector = \"input.autocomplete\", config = {}) {\n    /**\n     * @type {NodeListOf<HTMLInputElement>}\n     */\n    const nodes = document.querySelectorAll(selector);\n    nodes.forEach((el) => {\n      this.getOrCreateInstance(el, config);\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement} el\n   */\n  static getInstance(el) {\n    return INSTANCE_MAP.has(el) ? INSTANCE_MAP.get(el) : null;\n  }\n\n  /**\n   * @param {HTMLInputElement} el\n   * @param {Object} config\n   */\n  static getOrCreateInstance(el, config = {}) {\n    return this.getInstance(el) || new this(el, config);\n  }\n\n  dispose() {\n    this._searchInput.removeEventListener(\"focus\", this);\n    this._searchInput.removeEventListener(\"blur\", this);\n    this._searchInput.removeEventListener(\"input\", this);\n    this._searchInput.removeEventListener(\"keydown\", this);\n    this._dropElement.removeEventListener(\"mousemove\", this);\n\n    if (this._config.fixed) {\n      document.removeEventListener(\"scroll\", this, true);\n      window.removeEventListener(\"resize\", this);\n    }\n\n    this._dropElement.parentElement.removeChild(this._dropElement);\n\n    INSTANCE_MAP.delete(this._searchInput);\n  }\n\n  /**\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\n   * @param {Event} event\n   */\n  handleEvent(event) {\n    this[`on${event.type}`](event);\n  }\n\n  /**\n   * @param {Config|Object} config\n   */\n  _configure(config = {}) {\n    this._config = Object.assign({}, DEFAULTS);\n\n    // Handle options, using arguments first and data attr as override\n    const o = { ...config, ...this._searchInput.dataset };\n\n    // Allow 1/0, true/false as strings\n    const parseBool = (value) => [\"true\", \"false\", \"1\", \"0\", true, false].includes(value) && !!JSON.parse(value);\n\n    // Typecast provided options based on defaults types\n    for (const [key, defaultValue] of Object.entries(DEFAULTS)) {\n      // Check for undefined keys\n      if (o[key] === void 0) {\n        continue;\n      }\n      const value = o[key];\n      switch (typeof defaultValue) {\n        case \"number\":\n          this._config[key] = parseInt(value);\n          break;\n        case \"boolean\":\n          this._config[key] = parseBool(value);\n          break;\n        case \"string\":\n          this._config[key] = value.toString();\n          break;\n        case \"object\":\n          // Arrays have a type object in js\n          if (Array.isArray(defaultValue)) {\n            if (typeof value === \"string\") {\n              const separator = value.includes(\"|\") ? \"|\" : \",\";\n              this._config[key] = value.split(separator);\n            } else {\n              this._config[key] = value;\n            }\n          } else {\n            this._config[key] = typeof value === \"string\" ? JSON.parse(value) : value;\n          }\n          break;\n        case \"function\":\n          this._config[key] = typeof value === \"string\" ? window[value] : value;\n          break;\n        default:\n          this._config[key] = value;\n          break;\n      }\n    }\n  }\n\n  // #endregion\n\n  // #region Html\n\n  _configureSearchInput() {\n    this._searchInput.autocomplete = \"off\";\n    this._searchInput.spellcheck = false;\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-autocomplete\n    this._searchInput.ariaAutoComplete = \"list\";\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded\n    // use the aria-expanded state on the element with role combobox to communicate that the list is displayed.\n    this._searchInput.ariaExpanded = \"false\";\n    // include aria-haspopup matching the role of the element that contains the collection of suggested values.\n    this._searchInput.ariaHasPopup = \"menu\";\n    this._searchInput.setAttribute(\"role\", \"combobox\");\n  }\n\n  _configureDropElement() {\n    this._dropElement = document.createElement(\"ul\");\n    this._dropElement.setAttribute(\"id\", \"ac-menu-\" + counter);\n    this._dropElement.setAttribute(\"role\", \"menu\");\n    this._dropElement.classList.add(...[\"dropdown-menu\", \"autocomplete-menu\", \"p-0\"]);\n    this._dropElement.style.maxHeight = \"280px\";\n    if (!this._config.fullWidth) {\n      this._dropElement.style.maxWidth = \"360px\";\n    }\n    if (this._config.fixed) {\n      this._dropElement.style.position = \"fixed\";\n    }\n    this._dropElement.style.overflowY = \"auto\";\n    // Prevent scrolling the menu from scrolling the page\n    // @link https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior\n    this._dropElement.style.overscrollBehavior = \"contain\";\n    this._dropElement.style.textAlign = \"unset\"; // otherwise RTL is not good\n\n    insertAfter(this._searchInput, this._dropElement);\n    // include aria-controls with the value of the id of the suggested list of values.\n    this._searchInput.setAttribute(\"aria-controls\", this._dropElement.getAttribute(\"id\"));\n  }\n\n  // #endregion\n\n  // #region Events\n\n  oninput(e) {\n    if (this._preventInput) {\n      return;\n    }\n    this.showOrSearch();\n  }\n\n  onblur(e) {\n    this.hideSuggestions();\n  }\n\n  onfocus(e) {\n    this.showOrSearch();\n  }\n\n  /**\n   * keypress doesn't send arrow keys, so we use keydown\n   * @param {KeyboardEvent} e\n   */\n  onkeydown(e) {\n    const key = e.keyCode || e.key;\n    switch (key) {\n      case 13:\n      case \"Enter\":\n        if (this.isDropdownVisible()) {\n          e.preventDefault();\n          const selection = this.getSelection();\n          if (selection) {\n            selection.click();\n          }\n        }\n        break;\n      case 38:\n      case \"ArrowUp\":\n        e.preventDefault();\n        this._keyboardNavigation = true;\n        this._moveSelection(PREV);\n        break;\n      case 40:\n      case \"ArrowDown\":\n        e.preventDefault();\n        this._keyboardNavigation = true;\n        if (this.isDropdownVisible()) {\n          this._moveSelection(NEXT);\n        } else {\n          // show menu regardless of input length\n          this.showOrSearch(false);\n        }\n        break;\n      case 27:\n      case \"Escape\":\n        if (this.isDropdownVisible()) {\n          this._searchInput.focus();\n          this.hideSuggestions();\n        }\n        break;\n    }\n  }\n\n  onmousemove(e) {\n    // Moving the mouse means no longer using keyboard\n    this._keyboardNavigation = false;\n  }\n\n  onscroll(e) {\n    this._positionMenu();\n  }\n\n  onresize(e) {\n    this._positionMenu();\n  }\n\n  // #endregion\n\n  // #region Api\n\n  /**\n   * @param {String} k\n   * @returns {Config}\n   */\n  getConfig(k = null) {\n    if (k !== null) {\n      return this._config[k];\n    }\n    return this._config;\n  }\n\n  /**\n   * @param {String} k\n   * @param {*} v\n   */\n  setConfig(k, v) {\n    this._config[k] = v;\n  }\n\n  setData(src) {\n    this._items = {};\n    this._addItems(src);\n  }\n\n  enable() {\n    this._searchInput.setAttribute(\"disabled\", \"\");\n  }\n\n  disable() {\n    this._searchInput.removeAttribute(\"disabled\");\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isDisabled() {\n    return this._searchInput.hasAttribute(\"disabled\") || this._searchInput.disabled || this._searchInput.hasAttribute(\"readonly\");\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isDropdownVisible() {\n    return this._dropElement.classList.contains(SHOW_CLASS);\n  }\n\n  // #endregion\n\n  // #region Selection management\n\n  /**\n   * @returns {HTMLElement}\n   */\n  getSelection() {\n    return this._dropElement.querySelector(\"a.\" + ACTIVE_CLASS);\n  }\n\n  removeSelection() {\n    const selection = this.getSelection();\n    if (selection) {\n      selection.classList.remove(...this._activeClasses());\n    }\n  }\n\n  /**\n   * @returns {Array}\n   */\n  _activeClasses() {\n    return [...this._config.activeClasses, ...[ACTIVE_CLASS]];\n  }\n\n  /**\n   * @param {String} dir\n   * @returns {HTMLElement}\n   */\n  _moveSelection(dir = NEXT) {\n    const active = this.getSelection();\n    /**\n     * @type {*}\n     */\n    let sel = null;\n\n    // select first li\n    if (!active) {\n      sel = this._dropElement.firstChild;\n    } else {\n      const sibling = dir === NEXT ? \"nextSibling\" : \"previousSibling\";\n\n      // Iterate over visible li\n      sel = active.parentNode;\n      do {\n        sel = sel[sibling];\n      } while (sel && sel.style.display == \"none\");\n\n      // We have a new selection\n      if (sel) {\n        // Change classes\n        active.classList.remove(...this._activeClasses());\n\n        // Scroll if necessary\n        if (dir === PREV) {\n          // Don't use scrollIntoView as it scrolls the whole window\n          sel.parentNode.scrollTop = sel.offsetTop - sel.parentNode.offsetTop;\n        } else {\n          // This is the equivalent of scrollIntoView(false) but only for parent node\n          if (sel.offsetTop > sel.parentNode.offsetHeight - sel.offsetHeight) {\n            sel.parentNode.scrollTop += sel.offsetHeight;\n          }\n        }\n      } else if (active) {\n        sel = active.parentElement;\n      }\n    }\n\n    if (sel) {\n      const a = sel.querySelector(\"a\");\n      a.classList.add(...this._activeClasses());\n      this._searchInput.setAttribute(\"aria-activedescendant\", a.getAttribute(\"id\"));\n      if (this._config.updateOnSelect) {\n        this._searchInput.value = a.dataset.label;\n      }\n    } else {\n      this._searchInput.setAttribute(\"aria-activedescendant\", \"\");\n    }\n    return sel;\n  }\n\n  // #endregion\n\n  // #region Implementation\n\n  /**\n   * Do we have enough input to show suggestions ?\n   * @returns {Boolean}\n   */\n  _shouldShow() {\n    if (this.isDisabled()) {\n      return false;\n    }\n    return this._searchInput.value.length >= this._config.suggestionsThreshold;\n  }\n\n  /**\n   * Show suggestions or load them\n   * @param {Boolean} check\n   */\n  showOrSearch(check = true) {\n    if (check && !this._shouldShow()) {\n      this.hideSuggestions();\n      return;\n    }\n    if (this._config.liveServer) {\n      this._searchFunc();\n    } else if (this._config.source) {\n      this._config.source(this._searchInput.value, (items) => {\n        this.setData(items);\n        this._showSuggestions();\n      });\n    } else {\n      this._showSuggestions();\n    }\n  }\n\n  /**\n   * @param {String} lookup\n   * @param {Object} item\n   * @returns {HTMLElement}\n   */\n  _createItem(lookup, item) {\n    let label = item.label;\n\n    if (this._config.highlightTyped) {\n      const idx = removeDiacritics(label).toLowerCase().indexOf(lookup);\n      label =\n        label.substring(0, idx) +\n        `<mark>${label.substring(idx, idx + lookup.length)}</mark>` +\n        label.substring(idx + lookup.length, label.length);\n    }\n\n    label = this._config.onRenderItem(item, label, this);\n\n    const newChild = document.createElement(\"li\");\n    newChild.setAttribute(\"role\", \"presentation\");\n    const newChildLink = document.createElement(\"a\");\n    newChild.append(newChildLink);\n    newChildLink.setAttribute(\"id\", this._dropElement.getAttribute(\"id\") + \"-\" + this._dropElement.children.length);\n    newChildLink.classList.add(...[\"dropdown-item\", \"text-truncate\"]);\n    newChildLink.setAttribute(\"data-value\", item.value);\n    newChildLink.setAttribute(\"data-label\", item.label);\n    // Behave like a datalist (tab doesn't allow item selection)\n    // @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist\n    newChildLink.setAttribute(\"tabindex\", \"-1\");\n    newChildLink.setAttribute(\"role\", \"menuitem\");\n    newChildLink.setAttribute(\"href\", \"#\");\n    newChildLink.innerHTML = label;\n    if (item.data) {\n      for (const [key, value] of Object.entries(item.data)) {\n        newChildLink.dataset[key] = value;\n      }\n    }\n\n    // Hover sets active item\n    newChildLink.addEventListener(\"mouseenter\", (event) => {\n      // Don't trigger enter if using arrows\n      if (this._keyboardNavigation) {\n        return;\n      }\n      this.removeSelection();\n      newChild.querySelector(\"a\").classList.add(...this._activeClasses());\n    });\n    // Prevent searchInput losing focus and close the menu\n    newChildLink.addEventListener(\"mousedown\", (event) => {\n      event.preventDefault();\n    });\n    // Apply value\n    newChildLink.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n\n      // Prevent input otherwise it might trigger autocomplete due to value change\n      this._preventInput = true;\n      this._searchInput.value = item.label;\n      this._config.onSelectItem(item, this);\n      this.hideSuggestions();\n      this._preventInput = false;\n    });\n\n    return newChild;\n  }\n\n  /**\n   * Show drop menu with suggestions\n   */\n  _showSuggestions() {\n    const lookup = removeDiacritics(this._searchInput.value).toLowerCase();\n    this._dropElement.innerHTML = \"\";\n\n    const keys = Object.keys(this._items);\n    let count = 0;\n    let firstItem = null;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const entry = this._items[key];\n\n      const text = removeDiacritics(entry.label).toLowerCase();\n      const isMatched = lookup.length > 0 ? text.indexOf(lookup) >= 0 : true;\n      if (this._config.showAllSuggestions || isMatched) {\n        count++;\n        const newItem = this._createItem(lookup, entry);\n        if (!firstItem) {\n          firstItem = newItem;\n        }\n        this._dropElement.appendChild(newItem);\n        if (this._config.maximumItems > 0 && count >= this._config.maximumItems) {\n          break;\n        }\n      }\n    }\n\n    if (firstItem && this._config.autoselectFirst) {\n      this._moveSelection(NEXT);\n    }\n\n    if (count === 0) {\n      if (this._config.notFoundMessage) {\n        const newChild = document.createElement(\"li\");\n        newChild.setAttribute(\"role\", \"presentation\");\n        newChild.innerHTML = `<span class=\"dropdown-item\">${this._config.notFoundMessage}</span>`;\n        this._dropElement.appendChild(newChild);\n        this._showDropdown();\n      } else {\n        // Remove dropdown if not found\n        this.hideSuggestions();\n      }\n    } else {\n      // Or show it if necessary\n      this._showDropdown();\n    }\n  }\n\n  /**\n   * Show and position dropdown\n   */\n  _showDropdown() {\n    this._dropElement.classList.add(SHOW_CLASS);\n    this._searchInput.ariaExpanded = \"true\";\n    this._positionMenu();\n  }\n\n  /**\n   * Show or hide suggestions\n   * @param {Boolean} check\n   */\n  toggleSuggestions(check = true) {\n    if (this._dropElement.classList.contains(SHOW_CLASS)) {\n      this.hideSuggestions();\n    } else {\n      this.showOrSearch(check);\n    }\n  }\n\n  /**\n   * Hide the dropdown menu\n   */\n  hideSuggestions() {\n    this._dropElement.classList.remove(SHOW_CLASS);\n    this._searchInput.ariaExpanded = \"false\";\n    this.removeSelection();\n  }\n\n  /**\n   * @returns {HTMLInputElement}\n   */\n  getInput() {\n    return this._searchInput;\n  }\n\n  /**\n   * @returns {HTMLUListElement}\n   */\n  getDropMenu() {\n    return this._dropElement;\n  }\n\n  /**\n   * Checks if parent is fixed for boundary checks\n   * @returns {Boolean}\n   */\n  _hasFixedParent() {\n    let parent = this._searchInput.parentElement;\n    while (parent && parent instanceof HTMLElement) {\n      if (parent.style.position === \"fixed\") {\n        return true;\n      }\n      parent = parent.parentElement;\n    }\n    return false;\n  }\n\n  /**\n   * Position the dropdown menu\n   */\n  _positionMenu() {\n    const styles = window.getComputedStyle(this._searchInput);\n    const bounds = this._searchInput.getBoundingClientRect();\n    const fixedParent = this._hasFixedParent();\n    const isRTL = styles.direction === \"rtl\";\n\n    // Don't position left if not fixed since it may not work in all situations\n    // due to offsetParent margin or in tables\n    let left = null;\n    let top = null;\n\n    if (this._config.fixed) {\n      left = bounds.x;\n      top = bounds.y + bounds.height;\n\n      // Align end\n      if (isRTL && !this._config.fullWidth) {\n        left -= this._dropElement.offsetWidth - bounds.width;\n      }\n    }\n\n    // Reset any height overflow adjustement\n    this._dropElement.style.transform = \"unset\";\n\n    // Use full holder width\n    if (this._config.fullWidth) {\n      this._dropElement.style.width = this._searchInput.offsetWidth + \"px\";\n    }\n\n    // Position element\n    if (left !== null) {\n      this._dropElement.style.left = left + \"px\";\n    }\n    if (top !== null) {\n      this._dropElement.style.top = top + \"px\";\n    }\n\n    // Overflow height\n    const dropBounds = this._dropElement.getBoundingClientRect();\n    const h = fixedParent ? window.innerHeight : document.body.offsetHeight;\n    const vdiff = h - 1 - (dropBounds.y + dropBounds.height);\n\n    // We display above input if we have more space there\n    if (vdiff < 0 && bounds.y > h / 2) {\n      this._dropElement.style.transform = \"translateY(calc(-100% - \" + this._searchInput.offsetHeight + \"px))\";\n    }\n  }\n\n  _fetchData() {\n    this._items = {};\n\n    // From an array of items or an object\n    this._addItems(this._config.items);\n\n    // From a datalist\n    if (this._config.datalist) {\n      const datalist = document.querySelector(`#${this._config.datalist}`);\n      if (datalist) {\n        const items = Array.from(datalist.children).map((o) => {\n          const value = o.getAttribute(\"value\") ?? o.innerHTML.toLowerCase();\n          const label = o.innerHTML;\n\n          return {\n            value: value,\n            label: label,\n          };\n        });\n        this._addItems(items);\n      }\n    }\n\n    // From an external source\n    if (this._config.server && !this._config.liveServer) {\n      this._loadFromServer();\n    }\n  }\n\n  _addItems(src) {\n    const keys = Object.keys(src);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const entry = src[key];\n      const item = typeof entry === \"string\" ? {} : entry;\n\n      // Normalize entry\n      item.label = entry[this._config.labelField] ?? entry;\n      item.value = entry[this._config.valueField] ?? key;\n      this._items[item.value] = item;\n    }\n  }\n\n  /**\n   * @param {boolean} show\n   */\n  _loadFromServer(show = false) {\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n    this._abortController = new AbortController();\n\n    const params = Object.assign({}, this._config.serverParams);\n    // Pass current value\n    params[this._config.queryParam] = this._searchInput.value;\n    // Prevent caching\n    if (this._config.noCache) {\n      params.t = Date.now();\n    }\n    // We have a related field\n    if (params.related) {\n      /**\n       * @type {HTMLInputElement}\n       */\n      //@ts-ignore\n      const input = document.getElementById(params.related);\n      if (input) {\n        params.related = input.value;\n      }\n    }\n\n    const urlParams = new URLSearchParams(params);\n    let url = this._config.server;\n    let fetchOptions = Object.assign(this._config.fetchOptions, {\n      method: this._config.serverMethod || \"GET\",\n      signal: this._abortController.signal,\n    });\n\n    if (fetchOptions.method === \"POST\") {\n      fetchOptions.body = urlParams;\n    } else {\n      url += \"?\" + urlParams.toString();\n    }\n\n    this._searchInput.classList.add(LOADING_CLASS);\n    fetch(url, fetchOptions)\n      .then((r) => this._config.onServerResponse(r))\n      .then((suggestions) => {\n        const data = suggestions.data || suggestions;\n        this.setData(data);\n        this._abortController = null;\n        if (show) {\n          this._showSuggestions();\n        }\n      })\n      .catch((e) => {\n        if (e.name === \"AbortError\") {\n          return;\n        }\n        console.error(e);\n      })\n      .finally((e) => {\n        this._searchInput.classList.remove(LOADING_CLASS);\n      });\n  }\n\n  // #endregion\n}\n\nexport default Autocomplete;\n"],
  "mappings": "AA4DA,GAAM,GAAW,CACf,mBAAoB,GACpB,qBAAsB,EACtB,aAAc,EACd,gBAAiB,GACjB,eAAgB,GAChB,eAAgB,GAChB,UAAW,GACX,MAAO,GACP,cAAe,CAAC,aAAc,cAC9B,WAAY,QACZ,WAAY,QACZ,WAAY,QACZ,MAAO,GACP,OAAQ,KACR,SAAU,GACV,OAAQ,GACR,aAAc,MACd,aAAc,GACd,aAAc,GACd,WAAY,GACZ,QAAS,GACT,aAAc,IACd,gBAAiB,GACjB,aAAc,CAAC,EAAM,EAAO,IACnB,EAET,aAAc,CAAC,EAAM,IAAS,GAC9B,iBAAkB,AAAC,GACV,EAAS,QAQd,EAAgB,aAChB,EAAe,YACf,EAAa,OACb,EAAO,OACP,EAAO,OAEP,EAAe,GAAI,SACrB,EAAU,EAWd,WAAkB,EAAM,EAAU,IAAK,CACrC,GAAI,GACJ,MAAO,IAAI,IAAS,CAClB,aAAa,GACb,EAAQ,WAAW,IAAM,CAEvB,EAAK,MAAM,KAAM,IAChB,IAQP,WAA0B,EAAK,CAC7B,MAAO,GAAI,UAAU,OAAO,QAAQ,mBAAoB,IAQ1D,WAAqB,EAAI,EAAO,CAC9B,MAAO,GAAG,WAAW,aAAa,EAAO,EAAG,aAK9C,WAAmB,CAKjB,YAAY,EAAI,EAAS,GAAI,CAC3B,GAAI,CAAE,aAAc,cAAc,CAChC,QAAQ,MAAM,kBAAmB,GACjC,OAEF,EAAa,IAAI,EAAI,MACrB,IACA,OAAoB,EAEpB,OAAgB,GAGhB,OAAqB,GACrB,OAA2B,GAC3B,OAAmB,EAAS,IAAM,CAChC,OAAqB,KACpB,OAAa,cAGhB,SACA,SAEI,OAAa,OACf,UAAS,iBAAiB,SAAU,KAAM,IAC1C,OAAO,iBAAiB,SAAU,OAIpC,OAAkB,iBAAiB,QAAS,MAC5C,OAAkB,iBAAiB,OAAQ,MAC3C,OAAkB,iBAAiB,QAAS,MAC5C,OAAkB,iBAAiB,UAAW,MAC9C,OAAkB,iBAAiB,YAAa,MAEhD,eAUK,MAAK,EAAW,qBAAsB,EAAS,GAAI,CAKxD,AADc,SAAS,iBAAiB,GAClC,QAAQ,AAAC,GAAO,CACpB,KAAK,oBAAoB,EAAI,WAO1B,aAAY,EAAI,CACrB,MAAO,GAAa,IAAI,GAAM,EAAa,IAAI,GAAM,WAOhD,qBAAoB,EAAI,EAAS,GAAI,CAC1C,MAAO,MAAK,YAAY,IAAO,GAAI,MAAK,EAAI,GAG9C,SAAU,CACR,OAAkB,oBAAoB,QAAS,MAC/C,OAAkB,oBAAoB,OAAQ,MAC9C,OAAkB,oBAAoB,QAAS,MAC/C,OAAkB,oBAAoB,UAAW,MACjD,OAAkB,oBAAoB,YAAa,MAE/C,OAAa,OACf,UAAS,oBAAoB,SAAU,KAAM,IAC7C,OAAO,oBAAoB,SAAU,OAGvC,OAAkB,cAAc,YAAY,QAE5C,EAAa,OAAO,QAOtB,YAAY,EAAO,CACjB,KAAK,KAAK,EAAM,QAAQ,GAM1B,EAAW,EAAS,GAAI,CACtB,OAAe,OAAO,OAAO,GAAI,GAGjC,GAAM,GAAI,IAAK,KAAW,OAAkB,SAGtC,EAAY,AAAC,GAAU,CAAC,OAAQ,QAAS,IAAK,IAAK,GAAM,IAAO,SAAS,IAAU,CAAC,CAAC,KAAK,MAAM,GAGtG,OAAW,CAAC,EAAK,IAAiB,QAAO,QAAQ,GAAW,CAE1D,GAAI,EAAE,KAAS,OACb,SAEF,GAAM,GAAQ,EAAE,GAChB,OAAQ,MAAO,QACR,SACH,OAAa,GAAO,SAAS,GAC7B,UACG,UACH,OAAa,GAAO,EAAU,GAC9B,UACG,SACH,OAAa,GAAO,EAAM,WAC1B,UACG,SAEH,GAAI,MAAM,QAAQ,GAChB,GAAI,MAAO,IAAU,SAAU,CAC7B,GAAM,GAAY,EAAM,SAAS,KAAO,IAAM,IAC9C,OAAa,GAAO,EAAM,MAAM,OAEhC,QAAa,GAAO,MAGtB,QAAa,GAAO,MAAO,IAAU,SAAW,KAAK,MAAM,GAAS,EAEtE,UACG,WACH,OAAa,GAAO,MAAO,IAAU,SAAW,OAAO,GAAS,EAChE,cAEA,OAAa,GAAO,EACpB,QASR,GAAwB,CACtB,OAAkB,aAAe,MACjC,OAAkB,WAAa,GAE/B,OAAkB,iBAAmB,OAGrC,OAAkB,aAAe,QAEjC,OAAkB,aAAe,OACjC,OAAkB,aAAa,OAAQ,YAGzC,GAAwB,CACtB,OAAoB,SAAS,cAAc,MAC3C,OAAkB,aAAa,KAAM,WAAa,GAClD,OAAkB,aAAa,OAAQ,QACvC,OAAkB,UAAU,IAAQ,gBAAiB,oBAAqB,OAC1E,OAAkB,MAAM,UAAY,QAC/B,OAAa,WAChB,QAAkB,MAAM,SAAW,SAEjC,OAAa,OACf,QAAkB,MAAM,SAAW,SAErC,OAAkB,MAAM,UAAY,OAGpC,OAAkB,MAAM,mBAAqB,UAC7C,OAAkB,MAAM,UAAY,QAEpC,EAAY,OAAmB,QAE/B,OAAkB,aAAa,gBAAiB,OAAkB,aAAa,OAOjF,QAAQ,EAAG,CACT,AAAI,QAGJ,KAAK,eAGP,OAAO,EAAG,CACR,KAAK,kBAGP,QAAQ,EAAG,CACT,KAAK,eAOP,UAAU,EAAG,CAEX,OADY,EAAE,SAAW,EAAE,SAEpB,QACA,QACH,GAAI,KAAK,oBAAqB,CAC5B,EAAE,iBACF,GAAM,GAAY,KAAK,eACvB,AAAI,GACF,EAAU,QAGd,UACG,QACA,UACH,EAAE,iBACF,OAA2B,GAC3B,OAAoB,GACpB,UACG,QACA,YACH,EAAE,iBACF,OAA2B,GAC3B,AAAI,KAAK,oBACP,OAAoB,GAGpB,KAAK,aAAa,IAEpB,UACG,QACA,SACH,AAAI,KAAK,qBACP,QAAkB,QAClB,KAAK,mBAEP,OAIN,YAAY,EAAG,CAEb,OAA2B,GAG7B,SAAS,EAAG,CACV,SAGF,SAAS,EAAG,CACV,SAWF,UAAU,EAAI,KAAM,CAClB,MAAI,KAAM,KACD,OAAa,GAEf,OAOT,UAAU,EAAG,EAAG,CACd,OAAa,GAAK,EAGpB,QAAQ,EAAK,CACX,OAAc,GACd,OAAe,GAGjB,QAAS,CACP,OAAkB,aAAa,WAAY,IAG7C,SAAU,CACR,OAAkB,gBAAgB,YAMpC,YAAa,CACX,MAAO,QAAkB,aAAa,aAAe,OAAkB,UAAY,OAAkB,aAAa,YAMpH,mBAAoB,CAClB,MAAO,QAAkB,UAAU,SAAS,GAU9C,cAAe,CACb,MAAO,QAAkB,cAAc,KAAO,GAGhD,iBAAkB,CAChB,GAAM,GAAY,KAAK,eACvB,AAAI,GACF,EAAU,UAAU,OAAO,GAAG,UAOlC,GAAiB,CACf,MAAO,CAAC,GAAG,OAAa,cAAmB,GAO7C,EAAe,EAAM,EAAM,CACzB,GAAM,GAAS,KAAK,eAIhB,EAAM,KAGV,GAAI,CAAC,EACH,EAAM,OAAkB,eACnB,CACL,GAAM,GAAU,IAAQ,EAAO,cAAgB,kBAG/C,EAAM,EAAO,WACb,EACE,GAAM,EAAI,SACH,GAAO,EAAI,MAAM,SAAW,QAGrC,AAAI,EAEF,GAAO,UAAU,OAAO,GAAG,UAG3B,AAAI,IAAQ,EAEV,EAAI,WAAW,UAAY,EAAI,UAAY,EAAI,WAAW,UAGtD,EAAI,UAAY,EAAI,WAAW,aAAe,EAAI,cACpD,GAAI,WAAW,WAAa,EAAI,eAG3B,GACT,GAAM,EAAO,eAIjB,GAAI,EAAK,CACP,GAAM,GAAI,EAAI,cAAc,KAC5B,EAAE,UAAU,IAAI,GAAG,UACnB,OAAkB,aAAa,wBAAyB,EAAE,aAAa,OACnE,OAAa,gBACf,QAAkB,MAAQ,EAAE,QAAQ,WAGtC,QAAkB,aAAa,wBAAyB,IAE1D,MAAO,GAWT,GAAc,CACZ,MAAI,MAAK,aACA,GAEF,OAAkB,MAAM,QAAU,OAAa,qBAOxD,aAAa,EAAQ,GAAM,CACzB,GAAI,GAAS,CAAC,SAAoB,CAChC,KAAK,kBACL,OAEF,AAAI,OAAa,WACf,SACK,AAAI,OAAa,OACtB,OAAa,OAAO,OAAkB,MAAO,AAAC,GAAU,CACtD,KAAK,QAAQ,GACb,WAGF,SASJ,EAAY,EAAQ,EAAM,CACxB,GAAI,GAAQ,EAAK,MAEjB,GAAI,OAAa,eAAgB,CAC/B,GAAM,GAAM,EAAiB,GAAO,cAAc,QAAQ,GAC1D,EACE,EAAM,UAAU,EAAG,GACnB,SAAS,EAAM,UAAU,EAAK,EAAM,EAAO,iBAC3C,EAAM,UAAU,EAAM,EAAO,OAAQ,EAAM,QAG/C,EAAQ,OAAa,aAAa,EAAM,EAAO,MAE/C,GAAM,GAAW,SAAS,cAAc,MACxC,EAAS,aAAa,OAAQ,gBAC9B,GAAM,GAAe,SAAS,cAAc,KAY5C,GAXA,EAAS,OAAO,GAChB,EAAa,aAAa,KAAM,OAAkB,aAAa,MAAQ,IAAM,OAAkB,SAAS,QACxG,EAAa,UAAU,IAAQ,gBAAiB,iBAChD,EAAa,aAAa,aAAc,EAAK,OAC7C,EAAa,aAAa,aAAc,EAAK,OAG7C,EAAa,aAAa,WAAY,MACtC,EAAa,aAAa,OAAQ,YAClC,EAAa,aAAa,OAAQ,KAClC,EAAa,UAAY,EACrB,EAAK,KACP,OAAW,CAAC,EAAK,IAAU,QAAO,QAAQ,EAAK,MAC7C,EAAa,QAAQ,GAAO,EAKhC,SAAa,iBAAiB,aAAc,AAAC,GAAU,CAErD,AAAI,QAGJ,MAAK,kBACL,EAAS,cAAc,KAAK,UAAU,IAAI,GAAG,aAG/C,EAAa,iBAAiB,YAAa,AAAC,GAAU,CACpD,EAAM,mBAGR,EAAa,iBAAiB,QAAS,AAAC,GAAU,CAChD,EAAM,iBAGN,OAAqB,GACrB,OAAkB,MAAQ,EAAK,MAC/B,OAAa,aAAa,EAAM,MAChC,KAAK,kBACL,OAAqB,KAGhB,EAMT,GAAmB,CACjB,GAAM,GAAS,EAAiB,OAAkB,OAAO,cACzD,OAAkB,UAAY,GAE9B,GAAM,GAAO,OAAO,KAAK,QACrB,EAAQ,EACR,EAAY,KAChB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CACpC,GAAM,GAAM,EAAK,GACX,EAAQ,OAAY,GAEpB,EAAO,EAAiB,EAAM,OAAO,cACrC,EAAY,EAAO,OAAS,EAAI,EAAK,QAAQ,IAAW,EAAI,GAClE,GAAI,OAAa,oBAAsB,EAAW,CAChD,IACA,GAAM,GAAU,OAAiB,EAAQ,GAKzC,GAJK,GACH,GAAY,GAEd,OAAkB,YAAY,GAC1B,OAAa,aAAe,GAAK,GAAS,OAAa,aACzD,OASN,GAJI,GAAa,OAAa,iBAC5B,OAAoB,GAGlB,IAAU,EACZ,GAAI,OAAa,gBAAiB,CAChC,GAAM,GAAW,SAAS,cAAc,MACxC,EAAS,aAAa,OAAQ,gBAC9B,EAAS,UAAY,+BAA+B,OAAa,yBACjE,OAAkB,YAAY,GAC9B,aAGA,MAAK,sBAIP,UAOJ,GAAgB,CACd,OAAkB,UAAU,IAAI,GAChC,OAAkB,aAAe,OACjC,SAOF,kBAAkB,EAAQ,GAAM,CAC9B,AAAI,OAAkB,UAAU,SAAS,GACvC,KAAK,kBAEL,KAAK,aAAa,GAOtB,iBAAkB,CAChB,OAAkB,UAAU,OAAO,GACnC,OAAkB,aAAe,QACjC,KAAK,kBAMP,UAAW,CACT,MAAO,QAMT,aAAc,CACZ,MAAO,QAOT,GAAkB,CAChB,GAAI,GAAS,OAAkB,cAC/B,KAAO,GAAU,YAAkB,cAAa,CAC9C,GAAI,EAAO,MAAM,WAAa,QAC5B,MAAO,GAET,EAAS,EAAO,cAElB,MAAO,GAMT,GAAgB,CACd,GAAM,GAAS,OAAO,iBAAiB,QACjC,EAAS,OAAkB,wBAC3B,EAAc,SACd,EAAQ,EAAO,YAAc,MAI/B,EAAO,KACP,EAAM,KAEV,AAAI,OAAa,OACf,GAAO,EAAO,EACd,EAAM,EAAO,EAAI,EAAO,OAGpB,GAAS,CAAC,OAAa,WACzB,IAAQ,OAAkB,YAAc,EAAO,QAKnD,OAAkB,MAAM,UAAY,QAGhC,OAAa,WACf,QAAkB,MAAM,MAAQ,OAAkB,YAAc,MAI9D,IAAS,MACX,QAAkB,MAAM,KAAO,EAAO,MAEpC,IAAQ,MACV,QAAkB,MAAM,IAAM,EAAM,MAItC,GAAM,GAAa,OAAkB,wBAC/B,EAAI,EAAc,OAAO,YAAc,SAAS,KAAK,aAI3D,AAAI,AAHU,EAAI,EAAK,GAAW,EAAI,EAAW,QAGrC,GAAK,EAAO,EAAI,EAAI,GAC9B,QAAkB,MAAM,UAAY,2BAA6B,OAAkB,aAAe,QAItG,GAAa,CAOX,GANA,OAAc,GAGd,OAAe,OAAa,OAGxB,OAAa,SAAU,CACzB,GAAM,GAAW,SAAS,cAAc,IAAI,OAAa,YACzD,GAAI,EAAU,CACZ,GAAM,GAAQ,MAAM,KAAK,EAAS,UAAU,IAAI,AAAC,GAAM,CACrD,GAAM,GAAQ,EAAE,aAAa,UAAY,EAAE,UAAU,cAC/C,EAAQ,EAAE,UAEhB,MAAO,CACL,MAAO,EACP,MAAO,KAGX,OAAe,IAKnB,AAAI,OAAa,QAAU,CAAC,OAAa,YACvC,SAIJ,EAAU,EAAK,CACb,GAAM,GAAO,OAAO,KAAK,GACzB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CACpC,GAAM,GAAM,EAAK,GACX,EAAQ,EAAI,GACZ,EAAO,MAAO,IAAU,SAAW,GAAK,EAG9C,EAAK,MAAQ,EAAM,OAAa,aAAe,EAC/C,EAAK,MAAQ,EAAM,OAAa,aAAe,EAC/C,OAAY,EAAK,OAAS,GAO9B,EAAgB,EAAO,GAAO,CAC5B,AAAI,QACF,OAAsB,QAExB,OAAwB,GAAI,iBAE5B,GAAM,GAAS,OAAO,OAAO,GAAI,OAAa,cAQ9C,GANA,EAAO,OAAa,YAAc,OAAkB,MAEhD,OAAa,SACf,GAAO,EAAI,KAAK,OAGd,EAAO,QAAS,CAKlB,GAAM,GAAQ,SAAS,eAAe,EAAO,SAC7C,AAAI,GACF,GAAO,QAAU,EAAM,OAI3B,GAAM,GAAY,GAAI,iBAAgB,GAClC,EAAM,OAAa,OACnB,EAAe,OAAO,OAAO,OAAa,aAAc,CAC1D,OAAQ,OAAa,cAAgB,MACrC,OAAQ,OAAsB,SAGhC,AAAI,EAAa,SAAW,OAC1B,EAAa,KAAO,EAEpB,GAAO,IAAM,EAAU,WAGzB,OAAkB,UAAU,IAAI,GAChC,MAAM,EAAK,GACR,KAAK,AAAC,GAAM,OAAa,iBAAiB,IAC1C,KAAK,AAAC,GAAgB,CACrB,GAAM,GAAO,EAAY,MAAQ,EACjC,KAAK,QAAQ,GACb,OAAwB,KACpB,GACF,WAGH,MAAM,AAAC,GAAM,CACZ,AAAI,EAAE,OAAS,cAGf,QAAQ,MAAM,KAEf,QAAQ,AAAC,GAAM,CACd,OAAkB,UAAU,OAAO,OAOpC,EAAQ",
  "names": []
}
